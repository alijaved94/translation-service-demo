CREATE TABLE translations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    locale VARCHAR(10) NOT NULL,
    content VARCHAR(1000) NOT NULL,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL
);

CREATE INDEX idx_locale ON translations(locale);

CREATE TABLE translation_tags (
    translation_id BIGINT NOT NULL,
    tag VARCHAR(50) NOT NULL,
    PRIMARY KEY (translation_id, tag),
    FOREIGN KEY (translation_id) REFERENCES translations(id) ON DELETE CASCADE
);

CREATE INDEX idx_translation_tags ON translation_tags(tag);

CREATE OR REPLACE FUNCTION update_timestamps()
    RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' THEN
        NEW.created_at = CURRENT_TIMESTAMP;
        NEW.updated_at = CURRENT_TIMESTAMP;
    ELSIF TG_OP = 'UPDATE' THEN
        NEW.updated_at = CURRENT_TIMESTAMP;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER set_translations_timestamps
    BEFORE INSERT OR UPDATE ON translations
    FOR EACH ROW
EXECUTE FUNCTION update_timestamps();